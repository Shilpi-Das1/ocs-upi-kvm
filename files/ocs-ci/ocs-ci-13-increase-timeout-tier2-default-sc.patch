diff --git a/ocs_ci/helpers/helpers.py b/ocs_ci/helpers/helpers.py
index f4f7f83d2..73569be53 100644
--- a/ocs_ci/helpers/helpers.py
+++ b/ocs_ci/helpers/helpers.py
@@ -111,7 +111,7 @@ def create_resource(do_reload=True, **kwargs):
     return ocs_obj
 
 
-def wait_for_resource_state(resource, state, timeout=60):
+def wait_for_resource_state(resource, state, timeout=120):
     """
     Wait for a resource to get to a given status
 
@@ -1970,6 +1970,14 @@ def change_default_storageclass(scname):
     """
     default_sc = get_default_storage_class()
     ocp_obj = ocp.OCP(kind="StorageClass")
+    # Change the new storageclass to default
+    patch = (
+        ' \'{"metadata": {"annotations":'
+        '{"storageclass.kubernetes.io/is-default-class"'
+        ':"true"}}}\' '
+    )
+    patch_cmd = f"patch storageclass {scname} -p" + patch
+    ocp_obj.exec_oc_cmd(command=patch_cmd)
     if default_sc:
         # Change the existing default Storageclass annotation to false
         for sc in default_sc:
@@ -1981,17 +1989,6 @@ def change_default_storageclass(scname):
             patch_cmd = f"patch storageclass {sc} -p" + patch
             ocp_obj.exec_oc_cmd(command=patch_cmd)
 
-    # Change the new storageclass to default
-    patch = (
-        ' \'{"metadata": {"annotations":'
-        '{"storageclass.kubernetes.io/is-default-class"'
-        ':"true"}}}\' '
-    )
-    patch_cmd = f"patch storageclass {scname} -p" + patch
-    ocp_obj.exec_oc_cmd(command=patch_cmd)
-    return True
-
-
 def is_volume_present_in_backend(interface, image_uuid, pool_name=None):
     """
     Check whether Image/Subvolume is present in the backend.
